/* eslint-disable prettier/prettier */

export type AppIconName = 
    {%- for icon in icons %}
    '{{icon.name}}'
    {% if loop.index !== icons.length %} | {% endif %}
    {%- endfor %};


export type AppIconProps = {
    color?: string;
    className?: string;
    height?: number;
    name: AppIconName;
    onClick?: () => void;
    preview?: boolean;
    size?: number;
    style?: any,
    width?: number;
    wrapperStyle?: any;
}
const AppIcon = (props: AppIconProps) => {
  const { name, preview } = props;

  
  const renderPreview = () => {
    return <div>{renderPreviewKind(name)}</div>;
  };

  const renderIcon = (name: AppIconName) => {
    const { wrapperStyle } = props;
    if (wrapperStyle) {
      return <div style={wrapperStyle}>{getIcon(name)}</div>;
    }
    return getIcon(name);
  };


      const renderPreviewKind = (name: AppIconName) => {
    return (
      <div key={name}>
        <h3>&lt;Icon name="{name}" /&gt;</h3>
        {renderIcon(name)}
      </div>
    );
  };
  

  const getIcon = (name: AppIconName) => {
        const { color, height, onClick, size, style, width, className } = props;

        switch (name) {
            {% for icon in icons -%}
            case ('{{icon.name}}'): return ({{icon.svg | safe}});
            {% endfor -%}
            default: return null;
        }
    }

     return preview ? renderPreview() : renderIcon(name);
}

AppIcon.defaultProps = {
  size: 16,
};

export default AppIcon;
